---
title: "Hypothesis Testing with scipy.stats"
author: "Isabelle Perez"
toc: true
number-sections: true
highlight-style: pygments
format: 
  html: 
    code-fold: true
    html-math-method: katex
  pdf: 
    geometry: 
      - top=30mm
      - left=20mm
##  docx: default
--- 
# Introduction 

# Basic Statistical Hypothesis Tests 
## Two-sample t-test 
* Assumes observations are independent and identically distributed (i.i.d), 
normally distributed, and have equal variances. 
* Takes parameter alternative that can be set to "two_sided", "less", or "greater". 
* Takes optional parameter for handling null values. 
  + Can "propagate" (return NaN), "raise" (raise `ValueError`), or "omit"(ignore null values). 
* Takes optional boolean parameter indicating equal variances. 
  + Default is True.  
  + If set to False, performs Welch's t-test, which doesn't use pooled sample variance. 

| H~0~: $\mu_1 = \mu_2$, where $\mu_i$ is the population mean of population $i$  
| H~1~: $\mu_1 \neq$ or $>$ or $<$ $\mu_2$ 

```{python} 
import pandas as pd  
import scipy.stats  

# read in file 
df = pd.read_csv('rodent_2022-2023.csv')  

df['Created Date'] = pd.to_datetime(df['Created Date'])
df['Closed Date'] = pd.to_datetime(df['Closed Date'])
df['Response Time'] = df['Closed Date'] - df['Created Date']

df['Response Time'] = df['Response Time'].apply(lambda x: x.total_seconds()) 

# sample 200 data pts 
samples = df.sample(200, random_state = 0)

# split into two samples 
sample1 = samples.iloc[:100]['Response Time'].reset_index()
sample2 = samples.iloc[100:]['Response Time'].reset_index() 

# show the samples have unequal variances
print(sample1['Response Time'].std())
print(sample2['Response Time'].std())

# perform test and omit null values
t_1, p_1 = scipy.stats.ttest_ind(sample1, sample2, equal_var = False, nan_policy = 'omit')

# perform test and propagate null values
t_2, p_2 = scipy.stats.ttest_ind(sample1, sample2, equal_var = False, nan_policy = 'propagate')

# print results 
print(t_1, p_1)
print(t_2, p_2)
```  

## Paired t-test 
* Same assumptions as t-test with addition of observations across the two samples being 
paired. 
* Same null and alternate hypotheses as t-test and same parameters.  
* The input arrays must have the same shape. 

| H~0~: $\mu_1 = \mu_2$
| H~1~: $\mu_1 \neq$ or $>$ or $<$ $\mu_2$   

# Normality 
## Shapiro-Wilk Test 
* Used to test normality of a data sample.
* Assumes observations are i.i.d. 

| H~0~: data is drawn from a normal distribution  
| H~1~: data is not drawn from a normal distribution   

```{python}  
# only select rows where Response Time is not null 
modified_df = df[df['Response Time'].notnull()] 

sample3 = modified_df.sample(5000, random_state = 0)['Response Time'] 

t_2, p_2 = scipy.stats.shapiro(sample3)

print(t_2, p_2)  
```  

```{python}
import matplotlib.pyplot as plt 
 
bins = [i for i in range(0, 12600000, 1000000)]
 
plt.xticks(bins)

# set axis labels 
plt.xlabel('Response Time') 
plt.ylabel('Value Counts')

# plot sample3 data 
plt.hist(sample3.values, bins = bins) 
``` 

## NormalTest 
* Based on the D'Agostino-Pearson test for assessing normality with shape. 
  + Measures skewness and kurtosis, which is the heaviness/lightness of the tail. 
  + A normal distribution has skewness of $0$ and kurtosis of $3$.  
* Assumes observations are i.i.d. 

| H~0~: data is drawn from a normal distribution  
| H~1~: data is not drawn from a normal distribution   

```{python}
t_3, p_3 = scipy.stats.normaltest(sample3)

print(t_3, p_3) 
``` 

# Correlation   
## Pearson's Correlation 
* Tests for a linear relationship between two samples.
* Assumes observations are i.i.d, normally distributed, and have equal variances.  
* Returns a correlation coefficient as well as the test statistic and p-value. 
* Raises `ConstantInputWarning` if an input array has all constant values.   

| H~0~: the samples are independent 
| H~1~: there exists dependency between the samples 

# Nonparametric Hypothesis Tests   
## Mann-Whiney U Test 
* Tests that two samples are drawn from the same distribution. 
* Assumes observations are i.i.d. and can be ranked/compared. 
* Nonparametric version of t-test.  

| H~0~: distribution of sample 1 $=$ distribution of sample 2
| H~1~: distribution of sample 1 $\neq$ or $>$ or $<$ distribution of sample 2  

## Kruskal-Wallis H Test 
* Tests that two or more samples are drawn from the same distribution. 

| H~0~: all the samples have the same distribution 
| H~1~: at least two samples have differing distributions  